CREATE TABLE author(
    authorKey INTEGER generated by default as identity(nocache),
    lastName VARCHAR(30),
    firstName VARCHAR(30),
    countryOfBirth VARCHAR(60),
    dateOfBirth DATE,
    PRIMARY KEY(authorKey)
);

CREATE INDEX author_last_name ON author(lastName)


CREATE TABLE exhibits( 
    exhibitsKey INTEGER generated by default as identity(nocache),
    exhibitsName VARCHAR(50),
    authorKey INTEGER,
    themeKey INTEGER,
    worth INTEGER,
    PRIMARY KEY(exhibitsKey),
    FOREIGN KEY(authorKey) REFERENCES author ON DELETE CASCADE,
    FOREIGN KEY(themeKey) REFERENCES theme ON DELETE CASCADE
);

CREATE SYNONYM exhs FOR test.exhibits

ALTER TABLE exhibits ADD CONSTRAINT ch_worth CHECK(worth BETWEEN 1 AND 5);


CREATE TABLE theme(
    themeKey INTEGER,
    themeName VARCHAR(20) NOT NULL,
    PRIMARY KEY(themeKey)
);


CREATE TABLE supervisor(
    supervisorKey INTEGER generated by default as identity(nocache),
    firstName VARCHAR(20) NOT NULL,
    lastName VARCHAR(20) NOT NULL,
    hallKey INTEGER,
    telephoneNumber CHAR(17),
    dateOfBirth DATE NOT NULL,
    dateNow DATE DEFAULT SYSDATE,
    PRIMARY KEY(supervisorKey),
    FOREIGN KEY(hallKey) REFERENCES hall ON DELETE CASCADE
    );


CREATE OR REPLACE TRIGGER check_age
BEFORE INSERT OR UPDATE OF dateOfBirth
ON supervisor 
FOR EACH ROW
DECLARE
    dateOfBirth1 DATE;
BEGIN
    dateOfBirth1 := :NEW.dateOfBirth;--псевдозапись, обращение через имена полей
    IF EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM dateOfBirth1) <= 18 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Возраст должен быть больше 18 лет.');
    END IF;
END;
/ 

CREATE SYNONYM sup FOR test.supervisor

ALTER TABLE supervisor ADD CONSTRAINT ch_telephone_supervisor CHECK(REGEXP_LIKE(telephoneNumber,'^\+375\(\d{2}\)\d{3}-\d{2}-\d{2}$'));
ALTER TABLE supervisor ADD CONSTRAINT uni_telephone_supervisor UNIQUE(telephoneNumber);
--ALTER TABLE supervisor ADD CONSTRAINT ch_date_supervisor CHECK((dateNow-dateOfBirth)/365>=18);

ALTER TABLE supervisor DROP CONSTRAINT ch_date_supervisor;

CREATE TABLE hall(
    hallKey INTEGER,
    hallName VARCHAR(50) NOT NULL,
    square NUMBER(6,2),
    floor INTEGER,
    PRIMARY KEY(hallKey)
);

ALTER TABLE hall ADD CONSTRAINT ch_square CHECK (square BETWEEN 1 AND 1000);
ALTER TABLE hall ADD CONSTRAINT ch_floor CHECK (floor BETWEEN 1 AND 5);
ALTER TABLE hall ADD CONSTRAINT uni_square UNIQUE (hallName);

CREATE TABLE thematics(
    thematicsKey INTEGER,
    thematicsName VARCHAR(40) NOT NULL,
    PRIMARY KEY(thematicsKey)
);


CREATE TABLE exhibition(
    exhibitionKey INTEGER generated by default as identity(nocache),
    exhibitionName VARCHAR(20) NOT NULL,
    hallKey INTEGER,
    dateOfBegginig DATE,
    dateOfEnding DATE,
    thematicsKey INTEGER,
    PRIMARY KEY(exhibitionKey),
    FOREIGN KEY(hallKey) REFERENCES hall ON DELETE CASCADE,
    FOREIGN KEY(thematicsKey) REFERENCES thematics ON DELETE CASCADE
);

CREATE INDEX ex_name ON exhibition(exhibitionName)


--ADD CONSTRAINT date_check CHECK(dateOfEnding<=dateOfBegginig+91);

CREATE OR REPLACE TRIGGER check_month
BEFORE INSERT OR UPDATE OF dateOfEnding
ON exhibition
FOR EACH ROW
DECLARE
    dateOfEnding1 DATE;
    dateOfBegginig1 DATE;
BEGIN
    dateOfEnding1 := :NEW.dateOfEnding;--псевдозапись, обращение через имена полей
    dateOfBeggining1 := :NEW.dateOfBeggining;

    IF EXTRACT(MONTH FROM  dateOfEnding1) - EXTRACT(MONTH FROM dateOfBeggining1) <= 3 THEN
        RAISE_APPLICATION_ERROR(-20001, 'Длина выставки должна быть не более 3 месяцевс');
    END IF;
END;
/ 

DROP TRIGGER check_month

ALTER TABLE exhibition
ADD CONSTRAINT date_check CHECK(EXTRACT(MONTH FROM dateOfEnding)<=EXTRACT(MONTH FROM dateOfBegginig)+3);

CREATE TABLE basket(
    exhibitsKey INTEGER,
    exhibitionKey INTEGER,
    FOREIGN KEY(exhibitsKey) REFERENCES exhibits ON DELETE CASCADE,
    FOREIGN KEY(exhibitionKey) REFERENCES exhibition ON DELETE CASCADE
);

ALTER TABLE basket
ADD CONSTRAINT sost_key PRIMARY KEY (exhibitsKey, exhibitionKey)



begin
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Малевич','Казимир','Украина',to_date('23.02.1879','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('да Винчи','Леонардо','Римская империя',to_date('15.04.1452','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Васнецов','Виктор','РСФСР',to_date('15.05.1848','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Шишкин','Иван','Российская империя',to_date('25.01.1832','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Серов','Валентин','Россия',to_date('19.01.1865','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Ван Гог','Винсент','Нидерланды',to_date('30.05.1853','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Буонарроти','Микеланджело','Флорентийская республика',to_date('06.03.1475','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Пикассо','Пабло','Испания',to_date('25.10.1881','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Дон','Донателло','Италия',to_date('','dd.mm.yy'));
insert into author(lastName,firstName,countryOfBirth,dateOfBirth) values('Роден','Огюст','Франция',to_date('12.11.1840','dd.mm.yy'));
end;
/


begin
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Давид',2,2,3);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Черный квадрат',1,1,3);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Мона Лиза',2,1,5);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Тайная вечеря',2,1,5);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Богатыри',3,1,4);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Аленушка',3,1,3);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Утро в сосновом лесу',4,1,3);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Звездная ночь',6,1,2);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Подсолнухи',6,1,1);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Девочка на шаре',8,1,2);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Девочка с персиками',5,1,2);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Моисей',7,2,5);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Бюст Никколо да Уццано',9,2,3);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Святой Марк',9,2,2);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Давид',7,2,2);
insert into exhibits(exhibitsName,authorKey,themeKey,worth) values('Мыслитель',10,2,3);
end;
/


begin
insert into hall values(1,'Большой зал',500,1);
insert into hall values(2,'Малый зал',140.6,2);
insert into hall values(3,'Зеленый зал',456,3);
insert into hall values(4,'Белый зал',360,2);
insert into hall values(5,'Красный зал',232.7,3);
end;
/


INSERT ALL
INTO theme(themeKey,themeName) values(1,'живопись')
INTO theme(themeKey,themeName) values(2,'скульптура')
INTO theme(themeKey,themeName) values(3,'мозаика')
SELECT* FROM dual



begin
insert into thematics values(1,'Древняя Греция');
insert into thematics values(2,'Эпоха Возрождения');
insert into thematics values(3,'Эпоха Просвещения');
insert into thematics values(4,'Средние века');
insert into thematics values(5,'Современность');
end;
/


begin
insert into basket values(3,1);
insert into basket values(3,4);
insert into basket values(5,1);
insert into basket values(6,1);
insert into basket values(7,4);
insert into basket values(8,1);
insert into basket values(9,1);
insert into basket values(10,4);
insert into basket values(11,1);
insert into basket values(12,2);
insert into basket values(13,2);
insert into basket values(14,2);
insert into basket values(15,2);
insert into basket values(16,3);
end;
/

begin
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Дарья','Жиренкова',3,'+375(29)154-03-65',to_date('30.04.1968','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Сергей','Иванов',1,'+375(29)644-03-65',to_date('24.06.1973','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Анна','Петрова',2,'+375(29)442-65-77',to_date('01.09.1987','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Никита','Лебедев',2,'+375(29)114-03-65',to_date('03.10.1978','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Марина','Осипова',1,'+375(29)154-03-60',to_date('10.07.1980','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Светлана','Неклюдова',3,'+375(29)154-03-62',to_date('14.12.1966','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Анна','Федорович',2,'+375(29)884-03-61',to_date('16.01.1990','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Алина','Степанович',1,'+375(29)994-03-61',to_date('19.07.2000','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Екатерина','Дворник',1,'+375(29)124-03-61',to_date('02.09.1999','dd.mm.yy'),to_date('','dd.mm.yy'));
insert into supervisor(firstName,lastName,hallKey,telephoneNumber,dateOfBirth,dateNow) values ('Екатерина','Дворник',1,'+375(29)124-03-61',to_date('02.09.2010','dd.mm.yy'),to_date('','dd.mm.yy'));
end;
/


begin
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('пара',1,to_date('06.03.2023','dd.mm.yy'),to_date('31.05.2023','dd.mm.yy'),1);
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('осень',2,to_date('13.02.2023','dd.mm.yy'),to_date('03.04.2023','dd.mm.yy'),1);
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('зима',3,to_date('12.12.2022','dd.mm.yy'),to_date('06.02.2023','dd.mm.yy'),2);
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('весна',4,to_date('24.04.2023','dd.mm.yy'),to_date('15.06.2023','dd.mm.yy'),2);
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('лето',1,to_date('07.11.2022','dd.mm.yy'),to_date('31.12.2022','dd.mm.yy'),3);
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('июнь',2,to_date('06.05.2023','dd.mm.yy'),to_date('01.08.2023','dd.mm.yy'),4);
insert into exhibition(exhibitionName,hallKey,dateOfBegginig,dateOfEnding,thematicsKey) values('июль',2,to_date('06.05.2023','dd.mm.yy'),to_date('10.09.2023','dd.mm.yy'),4);

end;
/